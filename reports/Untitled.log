Traceback (most recent call last):
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py", line 583, in run_until_complete
    return future.result()
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/danhammer/streamlitenv/lib/python3.7/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas
import numpy

# N is the number of people in the sample
N = 1000

# m is the linear slope between education and income 
# (it is the additional annual income for each year of education)
m = 3000

# b is the linear intercept
# (it is the annual income for someone with 0 years of education)
b = 11000

dgp_df = pandas.DataFrame(
    data = {
        "random_error": numpy.random.normal(0, 10000, N),
        "data_science_interest": numpy.random.uniform(-1, 1, N) # can't observe this
    }
)


dgp_df["education"] = dgp_df["data_science_interest"] + numpy.random.uniform(10, 24, N)
dgp_df["total_error"] = dgp_df["data_science_interest"]*100 + dgp_df["random_error"]

dgp_df["income"] = m * dgp_df["education"] + b + dgp_df["total_error"]

dgp_df.describe()


# import matplotlib.pyplot as plt

# plt.scatter(
#     dgp_df["education"],
#     dgp_df["income"],
#     s=0.4
# )

dgp_df["income_avg"] = m * dgp_df["education"] + b

# plt.plot(
#     dgp_df["education"],
#     dgp_df["income_avg"],
#     color="orange"
# )

from scipy import stats

m_estimated, b_estimated, r, p, stderr = stats.linregress(dgp_df["education"], dgp_df["income"])

print(f"estimated slope: {m_estimated}")
print(f"estimated intercept: {b_estimated}")

plt.xlim([10, 24])

plt.scatter(
    dgp_df["education"],
    dgp_df["income"],
    s=0.4
)

plt.plot(
    dgp_df["education"],
    m_estimated * dgp_df["education"] + b_estimated,
    color="red"
)

plt.plot(
    dgp_df["education"],
    dgp_df["income_avg"],
    color="orange"
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-1-820e16ea2292>[0m in [0;36m<module>[0;34m[0m
[1;32m     52[0m [0mprint[0m[0;34m([0m[0;34mf"estimated intercept: {b_estimated}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     53[0m [0;34m[0m[0m
[0;32m---> 54[0;31m [0mplt[0m[0;34m.[0m[0mxlim[0m[0;34m([0m[0;34m[[0m[0;36m10[0m[0;34m,[0m [0;36m24[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     55[0m [0;34m[0m[0m
[1;32m     56[0m plt.scatter(

[0;31mNameError[0m: name 'plt' is not defined
NameError: name 'plt' is not defined

